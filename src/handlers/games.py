import random

from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.enums import ChatType, ParseMode
from aiogram.utils.formatting import Text, Code, TextMention

from src.database import Database
from src.filters import CooldownFilter
from src.functions import get_time_until_midnight
from src.types import Games
from src.utils import TextBuilder

from src import config

games_router = Router(name="Games router")


@games_router.message(Command(Games.KILLRU), CooldownFilter(Games.KILLRU),
                      F.chat.type.in_([ChatType.SUPERGROUP, ChatType.GROUP]))
async def killru_command(message: types.Message, db: Database, chat_user):
    russophobia = 0
    while russophobia == 0:
        russophobia = round(random.uniform(-5, 25))

    new_russophobia = chat_user[3] + russophobia
    current_time = message.date.timestamp()

    await db.cooldown.update_user_cooldown(message.chat.id, message.from_user.id, Games.KILLRU, current_time)
    await db.chat_user.update_user_russophobia(message.chat.id, message.from_user.id, new_russophobia)

    tb = TextBuilder(
        user=message.from_user.mention_markdown(), russophobia=Code(abs(russophobia)),
        ttp=Code(get_time_until_midnight(current_time)),
        new_russophobia=Code(new_russophobia)
    )
    if russophobia > 0:
        tb.add("üìà {user}, —Ç–≤–æ—è —Ä—É—Å–æ—Ñ–æ–±—ñ—è –∑–±—ñ–ª—å—à–∏–ª–∞—Å—å –Ω–∞ {russophobia} –∫–≥")
    else:
        tb.add("üìâ {user}, —Ç–≤–æ—è —Ä—É—Å–æ—Ñ–æ–±—ñ—è –∑–º–µ–Ω—à–∏–ª–∞—Å—å –Ω–∞ {russophobia} –∫–≥")
    tb.add("\nüè∑Ô∏è –¢–µ–ø–µ—Ä –≤ —Ç–µ–±–µ: {new_russophobia} –∫–≥\n‚è± –ü—Ä–æ–¥–æ–≤–∂—É–π –≥—Ä–∞—Ç–∏ —á–µ—Ä–µ–∑ {ttp}")

    await message.answer(tb.render(ParseMode.MARKDOWN_V2))


@games_router.message(Command(Games.KILLRU), ~CooldownFilter(Games.KILLRU),
                      F.chat.type.in_([ChatType.SUPERGROUP, ChatType.GROUP]))
async def killru_cooldown_command(message: types.Message):
    time = get_time_until_midnight(message.date.timestamp())
    text = Text("‚ÑπÔ∏è –¢–∏ –º–æ–∂–µ—à –≥—Ä–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ –¥–µ–Ω—å.\n–°–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ ", Code(time))
    await message.answer(text.as_markdown())
