from datetime import datetime, timedelta

import psutil
from aiogram import Router, types, F
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command, CommandStart
from aiogram.types import InlineKeyboardButton, CallbackQuery
from aiogram.utils.formatting import Text, Code, TextMention, TextLink
from aiogram.utils.formatting import Italic as It
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src import config
from src.database import Database
from src.filters import IsChat, IsCurrentUser, IsChatAdmin, GiveFilter
from src.types import LeaveCallback, SettingsCallback, SettingsEnum, ShopCallback, ShopEnum, HelpCallback, Games
from src.utils import TextBuilder, reply_and_delete, format_uptime, generate_top

commands_router = Router(name="Base commands router")
bot_start_time = datetime.now()


@commands_router.message(CommandStart())
async def start(message: types.Message):
    await message.reply(Text("ü´° –ü—Ä–∏–≤—ñ—Ç. –Ø –±–æ—Ç –¥–ª—è –≥—Ä–∏ –≤ —Ä—É—Å–æ—Ñ–æ–±—ñ—é. –î–æ–¥–∞–≤–∞–π –º–µ–Ω–µ –≤ —á–∞—Ç —ñ —Ä–æ–∑–≤–∞–∂–∞–π—Å—è. –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫ "
                             "–º–Ω–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è, –≤–∏–≤—á–∞–π /help").as_markdown())


@commands_router.message(Command("about"))
async def about(message: types.Message):
    tb = TextBuilder(
        version=Code(config.VERSION),
        news_channel=TextLink("News Channel", url="t.me/SofiaBotRol"),
        source=TextLink("Source", url="https://github.com/onilyxe/Sofia"),
        onilyxe=TextLink("onilyxe", url="https://t.me/onilyxe"),
        den=TextLink("den", url="https://t.me/itsokt0cry")
    )
    tb.add("üì° Sofia {version}\n", True)
    tb.add("{news_channel}", True)
    tb.add("{source}\n", True)
    tb.add("Made {onilyxe}. Idea {den}", True)
    await message.reply(tb.render())


@commands_router.message(Command("my"), IsChat())
async def my_command(message: types.Message, chat_user):
    russophobia = chat_user[3]
    tb = TextBuilder(user=TextMention(
        message.from_user.username or message.from_user.first_name, user=message.from_user
    ))
    if russophobia:
        tb.add("üò° {user}, —Ç–≤–æ—è —Ä—É—Å–æ—Ñ–æ–±—ñ—è: {russophobia} –∫–≥", russophobia=Code(russophobia))
    else:
        tb.add("üò† {user}, —É —Ç–µ–±–µ –Ω–µ–º–∞—î —Ä—É—Å–æ—Ñ–æ–±—ñ—ó, –≥—É–±–∏—Å—è")
    await message.reply(tb.render())


@commands_router.message(Command("leave"), IsChat())
async def leave(message: types.Message, chat_user: list):
    user = message.from_user
    russophobia = chat_user[3]
    tb, kb = TextBuilder(user=TextMention(user.first_name, user=user)), InlineKeyboardBuilder()

    if russophobia:
        tb.add("üò° {user}, —Ç–∏ –≤–ø–µ–≤–Ω–µ–Ω–∏–π, —â–æ —Ö–æ—á–µ—à –ø—Ä–æ—ó—Ö–∞—Ç–∏ —Å–≤–æ—é —Ä—É—Å–æ—Ñ–æ–±—ñ—é? –¢–≤–æ—ó –¥–∞–Ω—ñ –∑—ñ –≤—Å—ñ—Ö —á–∞—Ç—ñ–≤ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ "
               "–±–∞–∑–∏ –¥–∞–Ω–∏—Ö. –¶—é –¥—ñ—é –Ω–µ –º–æ–∂–Ω–∞ –±—É–¥–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏")
    else:
        tb.add("üòØ {user}, —É —Ç–µ–±–µ —ñ —Ç–∞–∫ –Ω–µ–º–∞—î —Ä—É—Å–æ—Ñ–æ–±—ñ—ó, –≥—É–±–∏—Å—è")

    kb.add(
        InlineKeyboardButton(
            text="‚úÖ –¢–∞–∫", callback_data=LeaveCallback(user_id=message.from_user.id, confirm=True).pack()
        ),
        InlineKeyboardButton(
            text="‚ùå –ù—ñ", callback_data=LeaveCallback(user_id=message.from_user.id, confirm=False).pack()
        )
    )

    await message.answer(
        text=tb.render(),
        reply_markup=(kb.as_markup() if russophobia else None)
    )


@commands_router.message(Command("ping"))
async def ping(message: types.Message, db: Database):
    start_time = datetime.now()
    await message.bot.get_me()
    ping_time = (datetime.now() - start_time).total_seconds() * 1000
    cpu_usage = psutil.cpu_percent(interval=1)
    ram_usage = psutil.virtual_memory().percent
    now = datetime.now()
    uptime = now - bot_start_time
    formatted_uptime = format_uptime(uptime)
    start_of_today = now.replace(hour=0, minute=0, second=0, microsecond=0)
    start_of_week = start_of_today - timedelta(days=now.weekday())

    today_record = await db.query.get_query(start_time)
    today_queries = today_record[1] if today_record else 0

    period_start = start_of_today if now.weekday() == 0 else start_of_week
    week_queries = await db.query.get_count_from_date(period_start)

    all_time_queries = await db.query.get_total_count()

    tb = TextBuilder()
    (tb.add("üì° Ping: {ping_time} ms\n", ping_time=Code(f"{ping_time:.2f}"))
     .add("üî• CPU: {cpu_usage}%", True, cpu_usage=Code(cpu_usage))
     .add("üíæ RAM: {ram_usage}%", True, ram_usage=Code(ram_usage))
     .add("‚è±Ô∏è Uptime: {formatted_uptime}\n", True, formatted_uptime=Code(formatted_uptime))
     .add("üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Ç—ñ–≤:", True)
     .add("{today}: {today_queries}", True, today=It("–ó–∞ —Å—å–æ–≥–æ–¥–Ω—ñ"), today_queries=Code(today_queries))
     .add("{week}: {week_queries}", True, week=It("–ó–∞ —Ç–∏–∂–¥–µ–Ω—å"), week_queries=Code(week_queries))
     .add("{all_time}: {all_time_queries}", True, all_time=It("–ó–∞ –≤–µ—Å—å —á–∞—Å"), all_time_queries=Code(all_time_queries))
     )

    await reply_and_delete(message, tb.render())


@commands_router.message(Command("globaltop"))
async def global_top(message: types.Message, db: Database):
    results = await db.chat_user.get_global_top()
    title = "üèÜ –ì–ª–æ–±–∞–ª—å–Ω–∏–π —Ç–æ–ø —Ä—É—Å–æ—Ñ–æ–±—ñ—ó"
    await generate_top(message, results, title, True)


@commands_router.message(Command("globaltop10"))
async def global_top10(message: types.Message, db: Database):
    results = await db.chat_user.get_global_top(10)
    title = "üèÜ –ì–ª–æ–±–∞–ª—å–Ω–∏–π —Ç–æ–ø 10 —Ä—É—Å–æ—Ñ–æ–±—ñ—ó"
    await generate_top(message, results, title, True)


@commands_router.message(Command("top"))
async def top(message: types.Message, db: Database):
    results = await db.chat_user.get_chat_top(message.chat.id)
    title = "üèÜ –¢–æ–ø —Ä—É—Å–æ—Ñ–æ–±—ñ—ó —á–∞—Ç—É"
    await generate_top(message, results, title, False)


@commands_router.message(Command("top10"))
async def top10(message: types.Message, db: Database):
    results = await db.chat_user.get_chat_top(message.chat.id, 10)
    title = "üèÜ –¢–æ–ø 10 —Ä—É—Å–æ—Ñ–æ–±—ñ—ó —á–∞—Ç—É"
    await generate_top(message, results, title, False)


@commands_router.callback_query(LeaveCallback.filter(), IsCurrentUser(True))
async def leave_callback(query: CallbackQuery, callback_data: LeaveCallback, db: Database):
    if callback_data.confirm:
        await db.user.remove_user(query.from_user.id)
        await query.bot.answer_callback_query(query.id, "üëπ –û—Ö –±—Ä–∞—Ç–∏–∫—É, –¥–∞—Ä–µ–º–Ω–æ —Ç–∏ —Ü–µ –∑—Ä–æ–±–∏–≤...")
        await query.bot.edit_message_text(
            f"ü§¨ {query.from_user.mention_markdown()}, —Ç–∏ –ø–æ–∫–∏–Ω—É–≤ –≥—Ä—É, —ñ —Ç–µ–±–µ –±—É–ª–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö",
            chat_id=query.message.chat.id,
            message_id=query.message.message_id
        )
    else:
        await query.bot.answer_callback_query(query.id, "‚ÑπÔ∏è C–∫–∞—Å–æ–≤—É—î–º–æ..")
        await query.bot.edit_message_text(
            f"ü´° {query.from_user.mention_markdown()} –∫—Ä–∞—Å—É–Ω—á–∏–∫, —Ç–∏ –∑–∞–ª–∏—à–∏–≤—Å—è —É –≥—Ä—ñ",
            chat_id=query.message.chat.id,
            message_id=query.message.message_id
        )


def get_settings_keyboard(minigames_enabled: bool, give_enabled: bool) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    minigames_btn = SettingsCallback(setting=SettingsEnum.MINIGAMES)
    give_btn = SettingsCallback(setting=SettingsEnum.GIVE)

    kb.row(InlineKeyboardButton(text=f"–ú—ñ–Ω—ñ-—ñ–≥—Ä–∏: {'‚úÖ' if minigames_enabled else '‚ùå'}",
                                callback_data=minigames_btn.pack()),
           InlineKeyboardButton(text=f"–ü–µ—Ä–µ–¥–∞—á–∞ –∫–≥: {'‚úÖ' if give_enabled else '‚ùå'}",
                                callback_data=give_btn.pack()))

    return kb


@commands_router.message(Command("settings"), IsChat(), IsChatAdmin())
async def settings(message: types.Message, db: Database):
    chat = await db.chat.get_chat(message.chat.id)
    minigames_enabled = bool(chat[1])
    give_enabled = bool(chat[2])

    kb = get_settings_keyboard(minigames_enabled, give_enabled)

    await message.reply("üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Ç—É", reply_markup=kb.as_markup())


@commands_router.callback_query(SettingsCallback.filter(), IsChatAdmin())
async def settings_callback(query: CallbackQuery, callback_data: SettingsCallback, db: Database):
    chat = await db.chat.get_chat(query.message.chat.id)
    minigames_enabled = bool(chat[1])
    give_enabled = bool(chat[2])

    if callback_data.setting == SettingsEnum.MINIGAMES:
        minigames_enabled = not minigames_enabled
    elif callback_data.setting == SettingsEnum.GIVE:
        give_enabled = not give_enabled

    await db.chat.set_chat_setting(query.message.chat.id, minigames_enabled, give_enabled)
    kb = get_settings_keyboard(minigames_enabled, give_enabled)

    try:
        await query.message.edit_reply_markup(reply_markup=kb.as_markup())
    except TelegramBadRequest:
        pass
    await query.bot.answer_callback_query(query.id, "üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–µ–Ω–æ")


def get_shop_keyboard():
    kb = InlineKeyboardBuilder()
    how_to_buy_btn = ShopCallback(menu=ShopEnum.HOW_TO_BUY)
    what_is_price_btn = ShopCallback(menu=ShopEnum.WHAT_IS_PRICE)
    where_money_go_btn = ShopCallback(menu=ShopEnum.WHERE_MONEY_GO)

    kb.row(InlineKeyboardButton(text="‚ùî –Ø–∫ –∫—É–ø–∏—Ç–∏ –∫–≥?", callback_data=how_to_buy_btn.pack()))
    kb.row(InlineKeyboardButton(text="üí≤ –Ø–∫–∞ —Ü—ñ–Ω–∞?", callback_data=what_is_price_btn.pack()))
    kb.row(InlineKeyboardButton(text="üõ∏ –ö—É–¥–∏ –ø—ñ–¥—É—Ç—å –≥—Ä–æ—à—ñ?", callback_data=where_money_go_btn.pack()))

    return kb


@commands_router.message(Command("shop"))
async def shop(message: types.Message):
    kb = get_shop_keyboard()

    await reply_and_delete(message, "üí≥ –•–æ—á–µ—à –±—ñ–ª—å—à–µ —Ä—É—Å–æ—Ñ–æ–±—ñ—ó?\n"
                                    "–¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫ —ó—ó –∫—É–ø–∏—Ç–∏",
                           reply_markup=kb.as_markup())


@commands_router.callback_query(ShopCallback.filter((F.menu == ShopEnum.HOW_TO_BUY)))
async def shop_how_to_buy(query: CallbackQuery):
    is_private = query.message.chat.type == "private"
    tb = TextBuilder()
    tb.add("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –±–∞–Ω–∫—É: {bank}", bank=TextLink("send.monobank.ua", url=config.DONATE))
    tb.add("–†–æ–±–∏—Ç–µ –¥–æ–Ω–∞—Ç –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω—É –≤–∞–º —Å—É–º—É, —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç–µ —Å–∫—Ä—ñ–Ω—à–æ—Ç –æ–ø–ª–∞—Ç–∏ –≤ @OnilyxeBot", new_line=True)
    tb.add("–ì–æ–ª–æ–≤–Ω–∞ —É–º–æ–≤–∞, –≤–∫–∞–∑–∞—Ç–∏ ID —á–∞—Ç—É –¥–µ –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É. "
           "–Ø–∫—â–æ —Ç–∏ –Ω–µ –∑–Ω–∞—î—à —â–æ —Ü–µ —Ç–∞–∫–µ, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É —É –ø–æ—Ç—Ä—ñ–±–Ω–æ–º—É —á–∞—Ç—ñ"
           if is_private else
           "ID —Ü—å–æ–≥–æ —á–∞—Ç—É: {chat_id}", new_line=True, chat_id=Code(query.message.chat.id))
    tb.add("–ü—ñ—Å–ª—è —á–µ–∫–∞–π –ø–æ–∫–∏ –∞–¥–º—ñ–Ω–∏ –æ–±—Ä–æ–±–ª—è—Ç—å —Ç–≤—ñ–π –∑–∞–ø–∏—Ç", new_line=True)

    kb = InlineKeyboardBuilder()
    back_button = InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_shop")
    kb.row(back_button)

    await query.message.edit_text(tb.render(), reply_markup=kb.as_markup())


@commands_router.callback_query(F.data == "back_to_shop")
async def back_to_shop(query: CallbackQuery):
    kb = get_shop_keyboard()
    await query.message.edit_text("üí≥ –•–æ—á–µ—à –±—ñ–ª—å—à–µ —Ä—É—Å–æ—Ñ–æ–±—ñ—ó?\n"
                                  "–¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫ —ó—ó –∫—É–ø–∏—Ç–∏", reply_markup=kb.as_markup())


def get_help_keyboard():
    kb = InlineKeyboardBuilder()
    kb.row(InlineKeyboardButton(text="–û—Å–Ω–æ–≤–Ω–∞ –≥—Ä–∞ - /killru", callback_data=HelpCallback(game=Games.KILLRU).pack()),
           width=1)

    buttons = [
        InlineKeyboardButton(text="üé≤", callback_data=HelpCallback(game=Games.DICE).pack()),
        InlineKeyboardButton(text="üéØ", callback_data=HelpCallback(game=Games.DARTS).pack()),
        InlineKeyboardButton(text="üé≥", callback_data=HelpCallback(game=Games.BOWLING).pack()),
        InlineKeyboardButton(text="üèÄ", callback_data=HelpCallback(game=Games.BASKETBALL).pack()),
        InlineKeyboardButton(text="‚öΩ", callback_data=HelpCallback(game=Games.FOOTBALL).pack()),
        InlineKeyboardButton(text="üé∞", callback_data=HelpCallback(game=Games.CASINO).pack())
    ]

    kb.row(*buttons, width=4)
    return kb


@commands_router.message(Command("help"))
async def help_command(message: types.Message):
    kb = get_help_keyboard()
    await reply_and_delete(message, text="‚öôÔ∏è –¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è\n–ø—Ä–æ –º–µ–Ω–µ –≤—Å–µ", reply_markup=kb.as_markup())


@commands_router.callback_query(F.data == "back_to_help")
async def back_to_help(query: CallbackQuery):
    kb = get_help_keyboard()
    await query.message.edit_text("‚öôÔ∏è –¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è\n–ø—Ä–æ –º–µ–Ω–µ –≤—Å–µ", reply_markup=kb.as_markup())


@commands_router.callback_query(HelpCallback.filter())
async def callback_help(query: CallbackQuery, callback_data: HelpCallback):
    game_emojis = {
        "killru":
            f"–ì—Ä–∞ –≤ —Ä—É—Å–æ—Ñ–æ–±—ñ—é"
            "\n–£ –≥—Ä—É –º–æ–∂–Ω–∞ –∑—ñ–≥—Ä–∞—Ç–∏ –∫–æ–∂–µ–Ω –¥–µ–Ω—å –æ–¥–∏–Ω —Ä–∞–∑, –≤–∏–∫–æ–Ω–∞–≤—à–∏ /killru"
            "\n–ü—Ä–∏ —Ü—å–æ–º—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—É—Å–æ—Ñ–æ–±—ñ—ó –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º –∑–±—ñ–ª—å—à–∏—Ç—å—Å—è(–¥–æ +25) –∞–±–æ –∑–º–µ–Ω—à–∏—Ç—å—Å—è(–¥–æ -5)"
            "\n–†–µ–π—Ç–∏–Ω –º–æ–∂–Ω–∞ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –≤–∏–∫–æ–Ω–∞–≤—à–∏ /top. –Ñ –º–∞–ª–µ–Ω—å–∫–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç /top10, —ñ –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Ç–æ–ø, –ø–æ–∫–∞–∑—É—î —Ç–æ–ø —Å–µ—Ä–µ–¥ —É—Å—ñ—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤ /globaltop10 —ñ –º–∞–ª–µ–Ω—å–∫–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç /globaltop10 "
            "\n–í–∏–∫–æ–Ω–∞–≤—à–∏ /my –º–æ–∂–Ω–∞ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —Å–≤–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—É—Å–æ—Ñ–æ–±—ñ—ó"
            "\n–ü–µ—Ä–µ–¥–∞—Ç–∏ —Å–≤–æ—é —Ä—É—Å–æ—Ñ–æ–±—ñ—é —ñ–Ω—à–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É, –º–æ–∂–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–≤—à–∏ –π–æ–º—É –∫–æ–º–∞–Ω–¥–æ—é /give, –≤–∫–∞–∑–∞–≤—à–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—É—Å–æ—Ñ–æ–±—ñ—ó"
            "\n–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±–æ—Ç–∞ –º–æ–∂–Ω–∞ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è, –≤–∏–∫–æ–Ω–∞–≤—à–∏ /about"
            "\n–°–ª—É–∂–±–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è: /ping"
            "\n–í–∞—Ä—ñ–∞–Ω—Ç–∏ –º—ñ–Ω—ñ-—ñ–≥–æ—Ä –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞ –∫–æ–º–∞–Ω–¥–æ—é /help, –≤–∏–±—Ä–∞–≤—à–∏ –∑–Ω–∏–∑—É –µ–º–æ–¥–∑—ñ, —â–æ –≤–∫–∞–∑—É—î –Ω–∞ –≥—Ä—É"
            "\n–ó–∞ –∫–æ–º–∞–Ω–¥–æ—é /settings –º–æ–∂–Ω–∞ –≤–∏–º–∫–Ω—É—Ç–∏ –≤ —á–∞—Ç—ñ –º—ñ–Ω—ñ-—ñ–≥—Ä–∏ —Ç–∞ –ø–µ—Ä–µ–¥–∞—á—É —Ä—É—Å–æ—Ñ–æ–±—ñ—ó. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω–∞–º —á–∞—Ç—É"
            "\n–í–∏–π—Ç–∏ –∑ –≥—Ä–∏ (–ø—Ä–æ–≥—Ä–µ—Å –≤–∏–¥–∞–ª—è—î—Ç—å—Å—è): /leave"
            "\n\n\n–Ø–∫—â–æ –º–µ–Ω—ñ –≤–∏–¥–∞—Ç–∏ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞ (–≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å), —Ç–æ —è —á–µ—Ä–µ–∑ –≥–æ–¥–∏–Ω—É –±—É–¥—É –≤–∏–¥–∞–ª—è—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –º–µ–Ω–µ —ñ —è–∫—ñ –º–µ–Ω–µ –≤–∏–∫–ª–∏–∫–∞–ª–∏. –ó–∞–ª–∏—à–∞—é—á–∏ —Ç—ñ–ª—å–∫–∏ –ø—Ä–æ –∑–º—ñ–Ω–∏ –≤ —Ä—É—Å–æ—Ñ–æ–±—ñ—ó"
            "\n\n\nKillru. –°–º–µ—Ä—Ç—å –≤—Å—å–æ–º—É —Ä–æ—Å—ñ–π—Å—å–∫–æ–º—É. ü´°",

        "game":
            f"üßå –ó–Ω–∞–π–¥–∏ —ñ –≤–±–∏–π –º–æ—Å–∫–∞–ª—è. –°—É—Ç—å –≥—Ä–∏ –≤–≥–∞–¥–∞—Ç–∏ –¥–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –º–æ—Å–∫–∞–ª—å –Ω–∞ —Å—ñ—Ç—Ü—ñ 3—Ö3"
            "\n‚è±Ô∏è –ú–æ–∂–Ω–∞ –∑—ñ–≥—Ä–∞—Ç–∏ —Ä–∞–∑ –Ω–∞ 2 –≥–æ–¥–∏–Ω–∏"
            "\nüîÄ –ü—Ä–∏–∑: —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ 1.5. –ë—É–ª–æ 50 –∫–≥. –ü—Ä–∏ –≤–∏–≥—Ä–∞—à—ñ –∑—ñ —Å—Ç–∞–≤–∫–æ—é 10, –æ—Ç—Ä–∏–º—É—î—à 20. –ë—É–¥–µ 70"
            "\nüí∞ –°—Ç–∞–≤–∫–∏: 1, 5, 10, 20, 30, 40, 50, 100"
            "\nüöÄ –ö–æ–º–∞–Ω–¥–∞ –≥—Ä–∏: /game",

        "dice":
            f"üé≤ –ì—Ä–∞ —É –∫–æ—Å—Ç—ñ. –°—É—Ç—å –≥—Ä–∏ –≤–≥–∞–¥–∞—Ç–∏ —è–∫–µ –≤–∏–ø–∞–¥–µ —á–∏—Å–ª–æ, –ø–∞—Ä–Ω–µ —á–∏ –Ω–µ–ø–∞—Ä–Ω–µ"
            "\n‚è±Ô∏è –ú–æ–∂–Ω–∞ –∑—ñ–≥—Ä–∞—Ç–∏ —Ä–∞–∑ –Ω–∞ 2 –≥–æ–¥–∏–Ω–∏"
            "\nüîÄ –ü—Ä–∏–∑: —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ 1.5. –ë—É–ª–æ 50 –∫–≥. –ü—Ä–∏ –≤–∏–≥—Ä–∞—à—ñ –∑—ñ —Å—Ç–∞–≤–∫–æ—é 10, –æ—Ç—Ä–∏–º—É—î—à 15. –ë—É–¥–µ 65"
            "\nüí∞ –°—Ç–∞–≤–∫–∏: 1, 5, 10, 20, 30, 40, 50, 100"
            "\nüöÄ –ö–æ–º–∞–Ω–¥–∞ –≥—Ä–∏: /dice",

        "darts":
            f"üéØ –ì—Ä–∞ –≤ –¥–∞—Ä—Ç—Å. –°—É—Ç—å –≥—Ä–∏ –ø–æ—Ç—Ä–∞–ø–∏—Ç–∏ –≤ —Ü–µ–Ω—Ç—Ä"
            "\n‚è±Ô∏è –ú–æ–∂–Ω–∞ –∑—ñ–≥—Ä–∞—Ç–∏ —Ä–∞–∑ –Ω–∞ 2 –≥–æ–¥–∏–Ω–∏"
            "\nüîÄ –ü—Ä–∏–∑: —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ 2. –ë—É–ª–æ 50 –∫–≥. –ü—Ä–∏ –≤–∏–≥—Ä–∞—à—ñ –∑—ñ —Å—Ç–∞–≤–∫–æ—é 10, –æ—Ç—Ä–∏–º—É—î—à 20. –ë—É–¥–µ 70"
            "\nüí∞ –°—Ç–∞–≤–∫–∏: 1, 5, 10, 20, 30, 40, 50, 100"
            "\nüöÄ –ö–æ–º–∞–Ω–¥–∞ –≥—Ä–∏: /darts",

        "basketball":
            f"üèÄ –ì—Ä–∞ –≤ –±–∞—Å–∫–µ—Ç–±–æ–ª. –°—É—Ç—å –≥—Ä–∏ –ø–æ—Ç—Ä–∞–ø–∏—Ç–∏ –≤ –∫–æ—à–∏–∫ –º'—è—á–µ–º"
            "\n‚è±Ô∏è –ú–æ–∂–Ω–∞ –∑—ñ–≥—Ä–∞—Ç–∏ —Ä–∞–∑ –Ω–∞ 2 –≥–æ–¥–∏–Ω–∏"
            "\nüîÄ –ü—Ä–∏–∑: —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ 1.5. –ë—É–ª–æ 50 –∫–≥. –ü—Ä–∏ –≤–∏–≥—Ä–∞—à—ñ –∑—ñ —Å—Ç–∞–≤–∫–æ—é 10, –æ—Ç—Ä–∏–º—É—î—à 15. –ë—É–¥–µ 65"
            "\nüí∞ –°—Ç–∞–≤–∫–∏: 1, 5, 10, 20, 30, 40, 50, 100"
            "\nüöÄ –ö–æ–º–∞–Ω–¥–∞ –≥—Ä–∏: /basketball",

        "football":
            f"‚öΩÔ∏è –ì—Ä–∞ —É —Ñ—É—Ç–±–æ–ª. –°—É—Ç—å –≥—Ä–∏ –ø–æ—Ç—Ä–∞–ø–∏—Ç–∏ –º'—è—á–µ–º —É –≤–æ—Ä–æ—Ç–∞"
            "\n‚è±Ô∏è –ú–æ–∂–Ω–∞ –∑—ñ–≥—Ä–∞—Ç–∏ —Ä–∞–∑ –Ω–∞ 2 –≥–æ–¥–∏–Ω–∏"
            "\nüîÄ –ü—Ä–∏–∑: —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ 1.5. –ë—É–ª–æ 50 –∫–≥. –ü—Ä–∏ –≤–∏–≥—Ä–∞—à—ñ –∑—ñ —Å—Ç–∞–≤–∫–æ—é 10, –æ—Ç—Ä–∏–º—É—î—à 15. –ë—É–¥–µ 65"
            "\nüí∞ –°—Ç–∞–≤–∫–∏: 1, 5, 10, 20, 30, 40, 50, 100"
            "\nüöÄ –ö–æ–º–∞–Ω–¥–∞ –≥—Ä–∏: /football",

        "bowling":
            f"üé≥ –ì—Ä–∞ –≤ –±–æ—É–ª—ñ–Ω–≥. –°—É—Ç—å –≥—Ä–∏ –≤–∏–±–∏—Ç–∏ —Å—Ç—Ä–∞–π–∫"
            "\n‚è±Ô∏è –ú–æ–∂–Ω–∞ –∑—ñ–≥—Ä–∞—Ç–∏ —Ä–∞–∑ –Ω–∞ 2 –≥–æ–¥–∏–Ω–∏"
            "\nüîÄ –ü—Ä–∏–∑: —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ 2. –ë—É–ª–æ 50 –∫–≥. –ü—Ä–∏ –≤–∏–≥—Ä–∞—à—ñ –∑—ñ —Å—Ç–∞–≤–∫–æ—é 10, –æ—Ç—Ä–∏–º—É—î—à 20. –ë—É–¥–µ 70"
            "\nüí∞ –°—Ç–∞–≤–∫–∏: 1, 5, 10, 20, 30, 40, 50, 100"
            "\nüöÄ –ö–æ–º–∞–Ω–¥–∞ –≥—Ä–∏: /bowling",

        "casino":
            f"üé∞ –ì—Ä–∞ –≤ –∫–∞–∑–∏–Ω–æ. –°—É—Ç—å –≥—Ä–∏ –≤–∏–±–∏—Ç–∏ –¥–∂–µ–∫–ø–æ—Ç"
            "\n‚è±Ô∏è –ú–æ–∂–Ω–∞ –∑—ñ–≥—Ä–∞—Ç–∏ —Ä–∞–∑ –Ω–∞ 2 –≥–æ–¥–∏–Ω–∏"
            "\nüîÄ –ü—Ä–∏–∑: —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ 2. –ë—É–ª–æ 50 –∫–≥. –ü—Ä–∏ –≤–∏–≥—Ä–∞—à—ñ –∑—ñ —Å—Ç–∞–≤–∫–æ—é 10, –æ—Ç—Ä–∏–º—É—î—à 20. –ë—É–¥–µ 70. –Ø–∫—â–æ –≤–∏–±–∏—Ç–∏ –¥–∂–µ–∫–ø–æ—Ç (777), —Ç–æ —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ 10"
            "\nüí∞ –°—Ç–∞–≤–∫–∏: 1, 5, 10, 20, 30, 40, 50, 100"
            "\nüöÄ –ö–æ–º–∞–Ω–¥–∞ –≥—Ä–∏: /casino",
    }
    tb = TextBuilder()
    tb.add(game_emojis[callback_data.game])
    kb = InlineKeyboardBuilder()
    kb.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_help"))
    await query.message.edit_text(tb.render(), reply_markup=kb.as_markup())
